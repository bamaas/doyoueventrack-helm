{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: doyoueventrack-backend
  labels:
    app: doyoueventrack-backend
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    revision: "{{ .Release.Revision }}"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: doyoueventrack-backend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: doyoueventrack-backend
    spec:
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        livenessProbe:
          failureThreshold: 4
          initialDelaySeconds: 53
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 5000
          timeoutSeconds: 3
        env:
        - name: KEYCLOAK_AUTH_SERVER_URL
          value: http://doyoueventrack-iam:8080/auth
        - name: DATABASE_HOST
          value: "doyoueventrack-database"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_DB
          valueFrom:
            secretKeyRef:
              name: doyoueventrack-database
              key: POSTGRES_DB
        - name: DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: doyoueventrack-database
              key: POSTGRES_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: doyoueventrack-database
              key: POSTGRES_PASSWORD
        resources:
          requests:
            memory: "{{ .Values.backend.resources.requests.memory }}"
            cpu: "{{ .Values.backend.resources.requests.cpu }}"
          limits:
            memory: "{{ .Values.backend.resources.limits.memory }}"
            cpu: "{{ .Values.backend.resources.limits.cpu }}"
        ports:
        - containerPort: 5000
          name: backendport
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          initialDelaySeconds: 53
          periodSeconds: 5
          successThreshold: 2
          tcpSocket:
            port: 5000
          timeoutSeconds: 3
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
{{- end }}