{{- if .Values.landing.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: doyoueventrack-landing
  labels:
    app: doyoueventrack-landing
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    revision: "{{ .Release.Revision }}"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: doyoueventrack-landing
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: doyoueventrack-landing
    spec:
      containers:
      - image: "{{ .Values.landing.image.repository }}:{{ .Values.landing.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.landing.image.pullPolicy }}
        command:
          - sh
          - -c
          - |
            IAM_URL=$(echo {{ .Values.iam.ingress.host }} | sed 's/\./\\./g')
            FRONTEND_URL=$(echo {{ .Values.frontend.ingress.host }} | sed 's/\./\\./g')
            sed -i "s/bro\.doyoueventrack\.app/${FRONTEND_URL}/g" /usr/share/nginx/public_html/index.html
            sed -i "s/auth\.doyoueventrack\.app/${IAM_URL}/g" /usr/share/nginx/public_html/index.html
            nginx -g 'daemon off;'
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 2
          successThreshold: 1
          tcpSocket:
            port: 80
          timeoutSeconds: 2
        name: landing
        resources:
          requests:
            memory: "5Mi"
            cpu: "5m"
          limits:
            memory: "50Mi"
            cpu: "10m"
        ports:
        - containerPort: 80
          name: landing80tcp
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 2
          successThreshold: 2
          tcpSocket:
            port: 80
          timeoutSeconds: 2
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
{{- end }}