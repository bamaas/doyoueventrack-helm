{{- if .Values.database.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: doyoueventrack-database
  labels:
    app: doyoueventrack-database
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    revision: "{{ .Release.Revision }}"
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": "hook-succeeded"
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: doyoueventrack-database
  serviceName: database
  template:
    metadata:
      labels:
        app: doyoueventrack-database
    spec:
      containers:
      - name: database
        image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.database.image.pullPolicy }}
        envFrom:
        - secretRef:
            name: doyoueventrack-database
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 2
          successThreshold: 1
          tcpSocket:
            port: 5432
          timeoutSeconds: 2
        ports:
        - containerPort: 5432
          name: 5432tcp
          protocol: TCP
        resources:
          requests:
            memory: "{{ .Values.database.resources.requests.memory }}"
            cpu: "{{ .Values.database.resources.requests.cpu }}"
          limits:
            memory: "{{ .Values.database.resources.limits.memory }}"
            cpu: "{{ .Values.database.resources.limits.cpu }}"
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 2
          successThreshold: 2
          tcpSocket:
            port: 5432
          timeoutSeconds: 2
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      {{- if .Values.database.persistentVolume.enabled }}
      volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: doyoueventrack-database
          subPath: doyoueventrack
      volumes:
      - name: doyoueventrack-database
        persistentVolumeClaim:
          claimName: doyoueventrack-database
      {{- end }}
  updateStrategy:
    type: RollingUpdate
status:
  replicas: 0
{{- end }}